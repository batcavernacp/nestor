# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Familia {
  id: String!
  createdAt: DateTime!
  updateAt: DateTime!
  codigo: Float!
  nome: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Grupo {
  id: String!
  createdAt: DateTime!
  updateAt: DateTime!
  codigo: Float!
  nome: String!
}

type Fornecedor {
  id: String!
  createdAt: DateTime!
  updateAt: DateTime!
  codigo: Float!
  nome: String!
}

type Jumbo {
  id: String!
  createdAt: DateTime!
  updateAt: DateTime!
  codigo: String!
  nome: String!
  referencia: Float!
  comprimento: Float!
  largura: Float!
  familia: Familia!
  grupo: Grupo!
  fornecedor: Fornecedor!
  codigoBarra: String!
  jumbo: Familia!
}

type Bobina {
  id: String!
  createdAt: DateTime!
  updateAt: DateTime!
  largura: Float!
  comprimento: Float!
  jumbo: Jumbo!
  codigoBarra: String!
}

type Vendedor {
  id: String!
  createdAt: DateTime!
  updateAt: DateTime!
  codigo: Float!
  nome: String!
}

type Cliente {
  id: String!
  createdAt: DateTime!
  updateAt: DateTime!
  codigo: Float!
  nome: String!
}

type OrdemProducao {
  id: String!
  createdAt: DateTime!
  updateAt: DateTime!
  pedidos: [Pedido!]!
}

type Pedido {
  id: String!
  createdAt: DateTime!
  updateAt: DateTime!
  sequencia: Float!
  vendedor: Vendedor!
  cliente: Cliente!
  movimentos: [Movimento!]!
  ordemProducao: OrdemProducao
  movimento: Movimento!
}

type Movimento {
  id: String!
  createdAt: DateTime!
  updateAt: DateTime!
  bobina: Bobina!
  quantidade: Float!
  pedido: Pedido!
}

type Entrada {
  id: String!
  createdAt: DateTime!
  updateAt: DateTime!
  jumbo: Jumbo!
  quantidade: Float!
}

type Query {
  bobinas: [Bobina!]!
  bobinaById(id: String!): Bobina!
  clienteById(id: String!): Cliente!
  clientes: [Cliente!]!
  findAll: [Entrada!]!
  familias: [Familia!]!
  familia(id: String!): Familia!
  fornecedores: [Fornecedor!]!
  grupos: [Grupo!]!
  jumbos: [Jumbo!]!
  movimentos: [Movimento!]!
  ordensProducao: [OrdemProducao!]!
  pedidos: [Pedido!]!
  vendedores: [Vendedor!]!
}

type Mutation {
  createBobina(bobina: CreateBobinaDto!): Bobina!
  deleteCliente(id: String!): Cliente!
  editCliente(id: String!): Cliente!
  createCliente(cliente: CreateClienteDto!): Cliente!
  create: Entrada!
  createFamilia(familia: CreateFamiliaDto!): Familia!
  editFamilia(familia: CreateFamiliaDto!, id: String!): Familia!
  deleteFamilia(id: String!): Familia!
  createFornecedor(fornecedor: FornecedorDto!): Fornecedor!
  createGrupo(grupo: GrupoDto!): Grupo!
  createJumbo(jumbo: JumboDto!): Jumbo!
  createMovimento: Movimento!
  createOrdemProducao(ordemProducao: OrdemProducaoDto!): OrdemProducao!
  createPedido(pedido: PedidoDto!): Pedido!
  createVendedor(vendedor: VendedorDto!): Vendedor!
}

input CreateBobinaDto {
  largura: Float!
  comprimento: Float!
  jumbo_id: ID!
}

input CreateClienteDto {
  codigo: Float!
  nome: String!
}

input CreateFamiliaDto {
  codigo: Float!
  nome: String!
}

input FornecedorDto {
  codigo: Float!
  nome: String!
}

input GrupoDto {
  codigo: Float!
  nome: String!
}

input JumboDto {
  codigo: String!
  nome: String!
  referencia: Float!
  comprimento: Float!
  largura: Float!
  familia_id: ID!
  grupo_id: ID!
  fornecedor_id: ID!
}

input OrdemProducaoDto {
  pedidos: [ID!]!
}

input PedidoDto {
  sequencia: Float!
  vendedor_id: ID!
  cliente_id: ID!
  movimentos: [ID!]!
}

input VendedorDto {
  codigo: Float!
  nome: String!
}